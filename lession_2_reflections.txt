What happens when you initialize a repository? Why do you need to do it?

- A Hidden Folder .git is created that stores the commits (the repository)

How is the staging area different from the working directory and the repository? What value do you think it offers?

- The staging area collects all the files for a commit. It is a good way to only commit the files that are important

How can you use the staging area to make sure you have one commit per logical change?

- You can compare the version in the staging area with the last commit and the working directory to see exactly what was changed. Add all the files for a logical change and commit 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

- If you want to try something new, but also need a working version for demonstration

How do the diagrams help you visualize the branch structure?

- Its easy to see the branches and the reachability

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

- Comparing the two latest commits and merging it into one file containing both changes. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

- Its less effort to merge files
- It can't resolve complex situations -> both versions are marked and the user has to resolve the conflict